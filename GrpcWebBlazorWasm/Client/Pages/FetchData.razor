@page "/fetchdata"
@using GrpcWebBlazorWasm.Shared
@inject TouristRouteProtoSevice.TouristRouteProtoSeviceClient TouristRouteProtoSeviceClient
@inject NavigationManager Navigation

<head>
    
</head>
@if (forecasts == null)
{
<p><em>正在加载中...</em></p>
}

else
{
<Table DataSource="forecasts">
    <RowTemplate>
        <Column @bind-Field="@context.Id" />
        <Column @bind-Field="@context.Title" />
        <Column @bind-Field="@context.TravelDays" />
        <ActionColumn Title="Action">
            <Button Type="primary" OnClick="()=>RemoveTouristRoute(context.Id)">删除</Button>
            <Button Type="primary" OnClick="()=>RemoveTouristRoute(context.Id)">修改</Button>
            <Button Type="primary" OnClick="()=>RemoveTouristRoute(context.Id)">别点</Button>

        </ActionColumn>
    </RowTemplate>
    <ExpandTemplate>
        @context.Data.Description
    </ExpandTemplate>
</Table>
}

@code {

    GrpcWebBlazorWasm.Shared.TouristRoutes testDatas;
    TouristRoute[] forecasts;

    protected override async Task OnInitializedAsync()
    {
        testDatas  = await TouristRouteProtoSeviceClient.GetTouristRoutesAsync(new Google.Protobuf.WellKnownTypes.Empty());
        forecasts = testDatas.TouristRouteList.ToArray();
    }

    private void IdentityLogin()
    {
        Navigation.NavigateTo($"authentication/login?returnUrl=" + Uri.EscapeDataString(Navigation.Uri));
    }

    async Task RemoveTouristRoute(string id)
    {
        try
        {
            var data = forecasts.Where(x => x.Id == id).ToArray();
            TouristRoute request = data[0];
            TouristRouteProtoSeviceClient.RemoveTouristRoute(request);
        }
        catch (Exception e)
        {
            testDatas = await TouristRouteProtoSeviceClient.GetTouristRoutesAsync(new Google.Protobuf.WellKnownTypes.Empty());
            forecasts = testDatas.TouristRouteList.ToArray();
        }
    }


}
